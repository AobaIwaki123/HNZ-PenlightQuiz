FROM node:18-bookworm-slim AS base

RUN apt-get update -y && apt-get install -y openssl

# Install dependencies
FROM base AS deps

# RUN apk add --no-cache libc6-compat
WORKDIR /view

COPY package.json yarn.lock* package-lock.json* pnpm-lock.yaml* ./
RUN \
  if [ -f yarn.lock ]; then yarn --frozen-lockfile; \
  elif [ -f package-lock.json ]; then npm ci; \
  elif [ -f pnpm-lock.yaml ]; then corepack enable pnpm && pnpm i --frozen-lockfile; \
  else echo "Lockfile not found." && exit 1; \
  fi

# Rebuild source code 
FROM base AS builder
WORKDIR /view
COPY --from=deps /view/node_modules ./node_modules
COPY . .

ENV NEXT_TELEMENTRY_DISABLED 1

RUN npx prisma generate

RUN \
  if [ -f yarn.lock ]; then yarn run build; \
  elif [ -f package-lock.json ]; then npm run build; \
  elif [ -f pnpm-lock.yaml ]; then corepack enable pnpm && pnpm run build; \
  else echo "Lockfile not found." && exit 1; \
  fi

# Production image
FROM base AS runner
WORKDIR /view

ENV NODE_ENV production

ENV NEXT_TELEMENTRY_DISABLED 1

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

COPY --from=builder /view/public ./public

COPY --from=builder --chown=nextjs:nodejs /view/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /view/.next/static ./.next/static
COPY --from=builder --chown=nextjs:nodejs /view/prisma ./prisma

USER nextjs

EXPOSE 3030

ENV PORT 3030

CMD HOSTNAME="0.0.0.0" PORT=3030 node server.js
